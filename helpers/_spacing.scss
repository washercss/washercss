$global-font-size:    16px !default;
$global-line-height:  24px !default;

$oldIE: false !default;

// Spacing values are determined based on your projectâ€™s global line height (i.e
// your baseline grid). It is not recommended that you modify these following
// variables (it can break your vertical rhythm), but if you need to, you can.

$global-spacing-unit: round($global-line-height) !default;


// How many times larger/smaller than the default should our spacing unit
// variants be?

$global-spacing-unit-factor-tiny:   0.25 !default;
$global-spacing-unit-factor-small:  0.5  !default;
$global-spacing-unit-factor-large:  2    !default;
$global-spacing-unit-factor-huge:   4    !default;


@function get-val($breakpoint) {
  @if $breakpoint {
    @return "-" + $breakpoint;
  } @else {
    @return "";
  };
}


// Check that the chosen font rules are pixel numbers.

@each $_font-globals in
      $global-font-size
      $global-line-height {

  @if (type-of($_font-globals) == number) {

    @if (unit($_font-globals) != "px") {
      @error "`#{$_font-globals}` needs to be a pixel value.";
    }

  } @else {
    @error "`#{$_font-globals}` needs to be a number.";
  }

}


// Check that the chosen size factors are unitless numbers.

@each $_spacing-unit in
      $global-spacing-unit-factor-tiny
      $global-spacing-unit-factor-small
      $global-spacing-unit-factor-large
      $global-spacing-unit-factor-huge {

  @if (type-of($_spacing-unit) == number) {

    @if (unitless($_spacing-unit) == false) {
      @error "`#{$_spacing-unit}` needs to be unitless.";
    }

  } @else {
    @error "`#{$_spacing-unit}` needs to be a number.";
  }

}

// Private/framework-only reassignment. Do not alter anything below.

$global-spacing-unit-tiny:  round($global-spacing-unit * $global-spacing-unit-factor-tiny);
$global-spacing-unit-small: round($global-spacing-unit * $global-spacing-unit-factor-small);
$global-spacing-unit-large: round($global-spacing-unit * $global-spacing-unit-factor-large);
$global-spacing-unit-huge:  round($global-spacing-unit * $global-spacing-unit-factor-huge);


$spacing-directions: (
  null,
  '-top',
  '-right',
  '-bottom',
  '-left',
  '-vertical',
  '-horizontal'
);

$spacing-properties: (
  'padding',
  'margin'
);

$spacing-sizes: (
  '-negative' : -$global-spacing-unit,
  '-zero': 0,
  '-tiny': $global-spacing-unit-tiny,
  '-small': $global-spacing-unit-small,
  null: $global-spacing-unit,
  '-large': $global-spacing-unit-large,
  '-huge': $global-spacing-unit-huge
) !default;

$mq-breakpoints: (
  mobile:  320px,
  tablet:  740px,
  desktop: 980px,
  wide:    1300px
) !default;

$grid-values: (
  palm:         null 740px,
  lap:          740px 980px,
  portable:     null 980px,
  "lap-and-up": 740px null,
  null:         null null
) !default;


// Internal : this mixin generates properties inside a class
// ex : sp-properties()
@mixin sp-properties($spacing-properties, $grid_name) {
  $b: get-val($grid_name);
  @each $property in $spacing-properties {
    @each $direction in $spacing-directions {
      @each $size, $value in $spacing-sizes {
        .#{$property}#{$direction}#{$size}#{$b} {
          @if $direction == '-vertical' {
            #{$property}-top: $value !important;
            #{$property}-bottom: $value !important;
          } @else if $direction == '-horizontal' {
            #{$property}-left: $value !important;
            #{$property}-right: $value !important;
          } @else {
            #{$property}#{$direction}: $value !important;
          }
        }
      }
    }
  }
}

/**
 * Utility classes to put specific spacing values onto elements. The below loop
 * will generate us a suite of classes like:
 *
 *   .margin-top {}
 *   .padding-left-large {}
 *   .margin-right-small {}
 *   .padding {}
 *   .padding-vertical-none-lap-and-up {}
 *   .padding-vertical-none-palm {}
 */
@each $grid_name, $grid_value in $grid-values {
  @if $grid_name {
    @include mq($from: nth($grid_value, 1), $until: nth($grid_value , 2)) {
      @include sp-properties($spacing-properties, $grid_name)
    }
  } @else {
    @include sp-properties($spacing-properties, null)
  }
}
